name: Remote Triggered Publish

on:
  repository_dispatch:
    types: [remote-triggered-published]

jobs:
  triggered_publish:
    if: ${{ github.event.client_payload.BINARY_VERSION && github.event.client_payload.DISPLAY_VERSION }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install

      - id: fetch_versions
        name: Fetch version to publish 
        using: node12
        run: 'remote-triggered-publish/dist/index.js'

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          SENTRY_DSN_PROD: ${{ secrets.SENTRY_DSN_PROD }}
          SEGMENT_NODE_PROD: ${{ secrets.SEGMENT_NODE_PROD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          BINARY_VERSION: ${{ steps.fetch_versions.outputs.version }}
          DISPLAY_VERSION: ${{ steps.fetch_versions.outputs.displayableVersion }}
        run: |
          npm run postinstall
          npm run build
          npm exec electron-builder -- --publish always --win --mac --linux -c.extraMetadata.version=$DISPLAY_VERSION
